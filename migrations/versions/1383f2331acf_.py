"""empty message

Revision ID: 1383f2331acf
Revises: 92cc03c6a675
Create Date: 2025-01-11 21:32:22.823272

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '1383f2331acf'
down_revision = '92cc03c6a675'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_reminders',
    sa.Column('reminderId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('timeStamp', sa.DateTime(), nullable=True),
    sa.Column('recurrenceRate', sa.Enum('Daily', 'Weekly', 'Fortnightly', 'Monthly', name='recurrencerate'), nullable=True),
    sa.PrimaryKeyConstraint('reminderId'),
    sa.UniqueConstraint('description'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags',
    sa.Column('tagId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('tagId'),
    sa.UniqueConstraint('name')
    )
    op.create_table('daily_reminders_tags',
    sa.Column('reminderId', sa.Integer(), nullable=False),
    sa.Column('tagId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reminderId'], ['daily_reminders.reminderId'], ),
    sa.ForeignKeyConstraint(['tagId'], ['tags.tagId'], ),
    sa.PrimaryKeyConstraint('reminderId', 'tagId')
    )
    op.create_table('iot_devices',
    sa.Column('deviceId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('state', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('Ok', 'Fault', name='iotstate'), nullable=False),
    sa.Column('pinCode', sa.String(length=4), nullable=True),
    sa.Column('uptimeTimestamp', sa.DateTime(), nullable=True),
    sa.Column('logPath', sa.String(length=200), nullable=True),
    sa.Column('ipAddress', sa.String(length=50), nullable=True),
    sa.Column('roomTag', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['roomTag'], ['tags.tagId'], ),
    sa.PrimaryKeyConstraint('deviceId'),
    sa.UniqueConstraint('ipAddress'),
    sa.UniqueConstraint('logPath')
    )
    op.create_table('iot_devices_custom_tags',
    sa.Column('deviceId', sa.Integer(), nullable=False),
    sa.Column('tagId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deviceId'], ['iot_devices.deviceId'], ),
    sa.ForeignKeyConstraint(['tagId'], ['tags.tagId'], ),
    sa.PrimaryKeyConstraint('deviceId', 'tagId')
    )
    op.create_table('iot_devices_user_tags',
    sa.Column('deviceId', sa.Integer(), nullable=False),
    sa.Column('tagId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deviceId'], ['iot_devices.deviceId'], ),
    sa.ForeignKeyConstraint(['tagId'], ['tags.tagId'], ),
    sa.PrimaryKeyConstraint('deviceId', 'tagId')
    )
    with op.batch_alter_table('iot_device', schema=None) as batch_op:
        batch_op.drop_index('ipAddress')
        batch_op.drop_index('logPath')
        batch_op.drop_index('name')

    op.drop_table('iot_device')
    op.drop_table('tag')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('tagId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('tagId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('iot_device',
    sa.Column('deviceId', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=100), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=True),
    sa.Column('state', mysql.LONGTEXT(charset='utf8mb4', collation='utf8mb4_bin'), nullable=False),
    sa.Column('status', mysql.ENUM('Operating', 'Fault'), nullable=False),
    sa.Column('pinCode', mysql.VARCHAR(length=4), nullable=True),
    sa.Column('uptimeTimestamp', mysql.DATETIME(), nullable=True),
    sa.Column('logPath', mysql.VARCHAR(length=200), nullable=True),
    sa.Column('ipAddress', mysql.VARCHAR(length=50), nullable=True),
    sa.PrimaryKeyConstraint('deviceId'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('iot_device', schema=None) as batch_op:
        batch_op.create_index('name', ['name'], unique=True)
        batch_op.create_index('logPath', ['logPath'], unique=True)
        batch_op.create_index('ipAddress', ['ipAddress'], unique=True)

    op.drop_table('iot_devices_user_tags')
    op.drop_table('iot_devices_custom_tags')
    op.drop_table('iot_devices')
    op.drop_table('daily_reminders_tags')
    op.drop_table('tags')
    op.drop_table('daily_reminders')
    # ### end Alembic commands ###
